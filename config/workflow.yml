version: "1.0.0"
name: "MVP Generator Git-Based Workflow"
description: "Advanced workflow for generating MVP projects with Git repository support"

steps:
  - type: input
    name: projectName
    message: "What is your project name?"
    validate: isValidProjectName
    filter: toKebabCase
    required: true

  - type: list
    name: template
    message: "Select a project template:"
    required: true
    pageSize: 10
    loop: false
    templateDisplay:
      showDescription: true
      showCategory: true
      showOptions: true
      maxWidth: 200
      separator: " | "
    # Choices will be loaded from templates.json

  - type: checkbox
    name: features
    message: "Select additional features:"
    choices:
      - name: "Docker support"
        value: docker
        description: "Add Docker configuration files"
      - name: "Database integration"
        value: database
        description: "Add database setup (MongoDB/PostgreSQL)"
      - name: "Testing setup"
        value: testing
        description: "Add Jest/Vitest testing configuration"
      - name: "CI/CD pipeline"
        value: cicd
        description: "Add GitHub Actions workflow"
      - name: "Documentation"
        value: docs
        description: "Add documentation templates"
      - name: "Environment variables"
        value: env
        description: "Add .env configuration"
      - name: "Linting & Formatting"
        value: linting
        description: "Add ESLint and Prettier configuration"
    required: false

  - type: list
    name: database
    message: "Choose database type:"
    when: hasDatabase
    choices:
      - name: "MongoDB"
        value: mongodb
        description: "NoSQL document database"
      - name: "PostgreSQL"
        value: postgresql
        description: "Relational database"
      - name: "MySQL"
        value: mysql
        description: "Popular relational database"
      - name: "SQLite"
        value: sqlite
        description: "Lightweight file-based database"
    required: false

  - type: confirm
    name: npmInstall
    message: "Install dependencies automatically?"
    default: true
    required: false

  - type: confirm
    name: gitInit
    message: "Initialize Git repository?"
    default: true
    required: false

  - type: input
    name: gitRemote
    message: "Git remote URL (optional):"
    when: gitInit
    required: false

postProcess:
  updatePackageJson: true
  installDependencies: false
  customScripts:
    - "git init"
    - "git add ."
    - "git commit -m 'Initial commit from MVP Generator'"
    - "echo 'Project created successfully!'" 